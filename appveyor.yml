# Use large clone depth so that a tag is included for versioning
clone_depth: 256

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

environment:
  matrix:
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python36-x64"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # Install InnoSetup and add to path
  - appveyor-retry choco install -y InnoSetup
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  # Check that we have the expected version and architecture for Python
  - "python --version"
  # Install shapeout2 and its dependencies
  - "appveyor-retry python -m pip install --upgrade pip"
  # PyInstaller does not know where scipy DLLs are on Windows
  # https://github.com/pyinstaller/pyinstaller/issues/4533
  - "appveyor-retry python -m pip install scipy==1.3.1"
  - "appveyor-retry pip install -e ."
  - "appveyor-retry pip install git+git://github.com/ZELLMECHANIK-DRESDEN/dclab.git"
  - "appveyor-retry pip install git+git://github.com/ZELLMECHANIK-DRESDEN/pyqtgraph.git"
  # Install pyinstaller (includes dependency for pywin32)
  - "appveyor-retry pip install pyinstaller==3.4"
  # Show the installed packages
  - "pip freeze"

build: off

test_script:
  - 'python -c "import shapeout2; print(shapeout2.__version__)"'
  - "pip install coverage"
  - "pip install codecov"
  - "coverage run --source=shapeout2 ./setup.py test"
  - "coverage report -m"
  # Allow codecov to fail
  - "codecov || exit 0"

after_test:
  - "appveyor-retry pip install twine wheel"
  # If tests are successful, create a whl package for the project.
  - "python setup.py bdist_wheel"
  - "python setup.py sdist"
  - ps: "ls dist"
  # Run pyinstaller
  - "pyinstaller -y --log-level=WARN .appveyor\\shapeout2.spec"
  # Create InnoSetup installers
  # Generate iss file
  - "python .appveyor\\make_iss.py"
  # Set InnoSetup path here, because Cython complained about it.
  - set PATH=%PATH%;"C:\\Program Files (x86)\\Inno Setup 5"
  - iscc /Q .appveyor\\shapeout2.iss

artifacts:
  # InnoSetup files
  - path: .appveyor\Output\*

deploy:
  provider: GitHub
  auth_token:
    secure: /b5SfmYssAfLaWi0qkPhxR5CruSVBZUurSQLEL3RAaRlHn6HTPrkIqvrLDk/8JxB
  artifact: /.*\.exe/
  draft: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only
